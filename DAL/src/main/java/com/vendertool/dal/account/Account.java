package com.vendertool.dal.account;

// Generated Jul 7, 2013 3:05:24 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account", catalog = "productdb", uniqueConstraints = @UniqueConstraint(columnNames = "EMAIL_ADDR"))
public class Account implements java.io.Serializable {

	private Long accountId;
	private String emailAddr;
	private String salt;
	private String password;
	private String firstName;
	private String lastName;
	private String middleName;
	private byte[] accountImage;
	private long registrationAddrId;
	private long billingAddrId;
	private Byte status;
	private Integer registeredCountry;
	private Byte localeIso3;
	private Byte currencyCodeIso3;
	private Date createdDate;
	private Date lastModifiedDate;
	private Byte lastModifiedApp;

	public Account() {
	}

	public Account(long registrationAddrId, long billingAddrId) {
		this.registrationAddrId = registrationAddrId;
		this.billingAddrId = billingAddrId;
	}

	public Account(String emailAddr, String salt, String password,
			String firstName, String lastName, String middleName,
			byte[] accountImage, long registrationAddrId, long billingAddrId,
			Byte status, Integer registeredCountry, Byte localeIso3,
			Byte currencyCodeIso3, Date createdDate, Date lastModifiedDate,
			Byte lastModifiedApp) {
		this.emailAddr = emailAddr;
		this.salt = salt;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.middleName = middleName;
		this.accountImage = accountImage;
		this.registrationAddrId = registrationAddrId;
		this.billingAddrId = billingAddrId;
		this.status = status;
		this.registeredCountry = registeredCountry;
		this.localeIso3 = localeIso3;
		this.currencyCodeIso3 = currencyCodeIso3;
		this.createdDate = createdDate;
		this.lastModifiedDate = lastModifiedDate;
		this.lastModifiedApp = lastModifiedApp;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ACCOUNT_ID", unique = true, nullable = false)
	public Long getAccountId() {
		return this.accountId;
	}

	public void setAccountId(Long accountId) {
		this.accountId = accountId;
	}

	@Column(name = "EMAIL_ADDR", unique = true, length = 128)
	public String getEmailAddr() {
		return this.emailAddr;
	}

	public void setEmailAddr(String emailAddr) {
		this.emailAddr = emailAddr;
	}

	@Column(name = "SALT", length = 128)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "PASSWORD", length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FIRST_NAME", length = 64)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 64)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "MIDDLE_NAME", length = 64)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "ACCOUNT_IMAGE")
	public byte[] getAccountImage() {
		return this.accountImage;
	}

	public void setAccountImage(byte[] accountImage) {
		this.accountImage = accountImage;
	}

	@Column(name = "REGISTRATION_ADDR_ID", nullable = false)
	public long getRegistrationAddrId() {
		return this.registrationAddrId;
	}

	public void setRegistrationAddrId(long registrationAddrId) {
		this.registrationAddrId = registrationAddrId;
	}

	@Column(name = "BILLING_ADDR_ID", nullable = false)
	public long getBillingAddrId() {
		return this.billingAddrId;
	}

	public void setBillingAddrId(long billingAddrId) {
		this.billingAddrId = billingAddrId;
	}

	@Column(name = "STATUS")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Column(name = "REGISTERED_COUNTRY")
	public Integer getRegisteredCountry() {
		return this.registeredCountry;
	}

	public void setRegisteredCountry(Integer registeredCountry) {
		this.registeredCountry = registeredCountry;
	}

	@Column(name = "LOCALE_ISO3")
	public Byte getLocaleIso3() {
		return this.localeIso3;
	}

	public void setLocaleIso3(Byte localeIso3) {
		this.localeIso3 = localeIso3;
	}

	@Column(name = "CURRENCY_CODE_ISO3")
	public Byte getCurrencyCodeIso3() {
		return this.currencyCodeIso3;
	}

	public void setCurrencyCodeIso3(Byte currencyCodeIso3) {
		this.currencyCodeIso3 = currencyCodeIso3;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_MODIFIED_DATE", length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "LAST_MODIFIED_APP")
	public Byte getLastModifiedApp() {
		return this.lastModifiedApp;
	}

	public void setLastModifiedApp(Byte lastModifiedApp) {
		this.lastModifiedApp = lastModifiedApp;
	}

}
